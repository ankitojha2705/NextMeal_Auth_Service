name: Deploy NextMeal Service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 3: Build, tag, and push Docker image
      - name: Build, tag, and push Docker image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: 529088288756.dkr.ecr.us-west-1.amazonaws.com
          ECR_REPOSITORY: nextmeal-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}

      # Step 4: Update Task Definition
      - name: Update ECS Task Definition
        id: update-task-def
        run: |
          jq --arg IMAGE "529088288756.dkr.ecr.us-west-1.amazonaws.com/nextmeal-server:${{ github.sha }}" \
            '.containerDefinitions[0].image = $IMAGE' nextmeal-task-definition.json > new-task-def.json

      # Step 5: Register Updated Task Definition
      - name: Register ECS Task Definition
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --region $AWS_REGION

      # Step 6: Deploy to ECS Service
      - name: Deploy to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        with:
          cluster: nextmeal-service-cluster
          service: nextmeal-auth
          task-definition: ${{ steps.register-task-def.outputs.task-definition-arn }}
          wait-for-service-stability: true
